version: 2.1

orbs:
  aws-s3: circleci/aws-s3@2.0.0
  aws-cli: circleci/aws-cli@1.3.0

defaults: &defaults
  docker:
    - image: circleci/python:3.8.3
  working_directory: ~/project

prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python3 -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

fetch_data: &fetch_data
  aws-s3/copy:
    arguments: '--dryrun'
    from: 's3://deployment-demo-bnc/training-dataset/german_columns.csv'
    to: packages/classification_model/classification_model/datasets/


jobs:
  test_classification_model:
    <<: *defaults
    steps:
      - checkout
      - aws-s3/copy:
          arguments: '--dryrun'
          from: 's3://deployment-demo-bnc/training-dataset/german_columns.csv'
          to: packages/classification_model/classification_model/datasets/
      - *prepare_venv
      - run:
          name: Install requirements
          command: |
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/classification_model/requirements.txt
      - *fetch_data
      - run:
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/classification_model python3 packages/classification_model/classification_model/train_pipeline.py
      - run:
          name: Run tests
          command: |
            . venv/bin/activate
            py.test -vv packages/classification_model/tests

  test_ml_api:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - py-deps-{{ checksum "packages/ml_api/requirements.txt" }}
      - aws-cli/install
      - run:
          name: Runnning tests
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            aws codeartifact login --tool pip --domain packages --repository classification-model-package
            pip install -i https://pypi.org/simple -r packages/classification_model/requirements.txt
            pip install -i https://pypi.org/simple -r packages/ml_api/requirements.txt
            pip install -r packages/ml_api/requirementsaws.txt
            py.test -vv packages/ml_api/tests -m "not differential"
      - save_cache:
          key: py-deps-{{ checksum "packages/ml_api/requirements.txt" }}
          paths:
            - "/venv"

  train_and_upload_classification_model:
    <<: *defaults
    steps:
      - checkout
      - *prepare_venv
      - run:
          name: Install requirements
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r packages/classification_model/requirements.txt
      - *fetch_data
      - run:
          name: Train model
          command: |
            . venv/bin/activate
            PYTHONPATH=./packages/classification_model python3 packages/classification_model/classification_model/train_pipeline.py
      - aws-cli/install
      - run:
          name: Publish the model to AWS CodeArtifact
          command: |
            . venv/bin/activate
            aws codeartifact login --tool twine --domain packages --repository classification-model-package

#  differential_tests:
#    <<: *defaults
#    steps:
#      - checkout
#      - *prepare_venv
#      - run:
#          name: Capturing previous model predictions
#          command: |
#            . venv/bin/activate
#            pip install -r packages/ml_api/diff_test_requirements.txt
#            PYTHONPATH=./packages/ml_api python3 packages/ml_api/tests/capture_model_predictions.py
#      - run:
#          name: Runnning differential tests
#          command: |
#            . venv/bin/activate
#            pip install -r packages/ml_api/requirements.txt
#            py.test -vv packages/ml_api/tests -m differential

workflows:
  version: 2.1
  test-all:
    jobs:
      - test_classification_model
      - test_ml_api
      - train_and_upload_classification_model:
          requires:
            - test_classification_model
            - test_ml_api


